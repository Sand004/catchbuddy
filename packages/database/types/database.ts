// THIS FILE WILL BE AUTO-GENERATED BY SUPABASE CLI
// Run: pnpm generate-types
// or: npx supabase gen types typescript --linked > types/database.ts

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string
          email: string | null
          full_name: string | null
          avatar_url: string | null
          subscription_tier: string
          language: string
          usage_limits: Json
          onboarding_completed: boolean
          created_at: string
          updated_at: string
        }
        Insert: {
          id: string
          email?: string | null
          full_name?: string | null
          avatar_url?: string | null
          subscription_tier?: string
          language?: string
          usage_limits?: Json
          onboarding_completed?: boolean
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          email?: string | null
          full_name?: string | null
          avatar_url?: string | null
          subscription_tier?: string
          language?: string
          usage_limits?: Json
          onboarding_completed?: boolean
          created_at?: string
          updated_at?: string
        }
      }
      equipment_items: {
        Row: {
          id: string
          user_id: string
          name: string
          type: string
          brand: string | null
          model: string | null
          color: string | null
          size: string | null
          weight: number | null
          attributes: Json
          image_url: string | null
          purchase_info: Json
          embedding: string | null
          tags: string[]
          is_favorite: boolean
          condition: string
          notes: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          name: string
          type: string
          brand?: string | null
          model?: string | null
          color?: string | null
          size?: string | null
          weight?: number | null
          attributes?: Json
          image_url?: string | null
          purchase_info?: Json
          embedding?: string | null
          tags?: string[]
          is_favorite?: boolean
          condition?: string
          notes?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          name?: string
          type?: string
          brand?: string | null
          model?: string | null
          color?: string | null
          size?: string | null
          weight?: number | null
          attributes?: Json
          image_url?: string | null
          purchase_info?: Json
          embedding?: string | null
          tags?: string[]
          is_favorite?: boolean
          condition?: string
          notes?: string | null
          created_at?: string
          updated_at?: string
        }
      }
      // ... other tables will be generated
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      search_similar_equipment: {
        Args: {
          query_embedding: string
          match_threshold?: number
          match_count?: number
          user_filter?: string | null
        }
        Returns: {
          id: string
          name: string
          type: string
          brand: string | null
          similarity: number
        }[]
      }
    }
    Enums: {
      [_ in never]: never
    }
  }
}
